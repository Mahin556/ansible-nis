---
- name: Installing a NIS client packages
  yum:
    name: "{{ item }}"
    state: present
  with_items: "{{ nis_client_packages }}"
  notify:
    - restart rpcbind

- name: Setting up a hostname for nis client
  hostname:
    name: "{{ nis_client.fqdn }}"

- name: Setting up a ypdomainname
  command: "ypdomainname {{ nis_domain }}"  #domainname nis.example.com

- name: hosts file
  lineinfile:
    path: /etc/hosts
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertbefore: EOF
  loop:
    - { regexp: "^.*{{ nis_server.fqdn }}\\s+{{ nis_server.alias }}.*$", line: "192.168.1.147 {{ nis_server.fqdn }} {{ nis_server.alias }}" }

- name: configuring a yp.conf file on nis client
  template:
    src: yp.conf.j2
    dest: /etc/yp.conf
    owner: root
    group: root
    mode: "0644"

- name: configuring a nsswitch.conf file on nis client
  template:
    src: nsswitch.conf.j2
    dest: /etc/nsswitch.conf
    owner: root
    group: root
    mode: "0644"

- name: add NISDOMAIN to sysconfig/network
  lineinfile:
    path: /etc/sysconfig/network
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    backup: yes
    insertbefore: EOF
    create: yes
    group: root
    owner: root
    mode: 0644
  loop:
    - { regexp: 'NISDOMAIN=.*', line: 'NISDOMAIN={{ nis_domain }}' }
  notify:
    - restart rpcbind

- name: making selinux permissive
  selinux:
    policy: targeted
    state: permissive

- name: client of nis-server
  command: "authconfig --enablenis --nisdomain={{ nis_domain }}  --nisserver={{ nis_server.fqdn }} --enablemkhomedir --update"
  register: command_state
  failed_when: command_state.rc != 0

- name: Starting a firewalld
  service:
    name: firewalld
    state: restarted
    enabled: true
  notify: config firewall rules

- name: Starting a ypbind
  service:
    name: firewalld
    state: restarted
    enabled: true
  
- name: enable and start nscd
  service:
    name: nscd
    enabled: "{{ nis_nscd_enabled }}"
    state: restarted
  when: nis_manage_nscd|bool
